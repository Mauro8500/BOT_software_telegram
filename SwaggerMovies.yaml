---
swagger: "2.0"
info:
  description: Esta documentaci√≥n se refiere a un sistema de reserva de peliculas
  version: 1.0.0
  title: Aplicacion web para reserva de peliculas
host: virtserver.swaggerhub.com
basePath: /juan.illanes/movies/1.0.0
tags:
- name: administrador
  description: Operaciones de administrador
- name: clientes
  description: Operaciones de clientes
- name: catalogo
  description: Operaciones de catalogo
schemes:
- https
paths:
  /peliculas/titulo:
    post:
      tags:
      - administrador
      summary: Agrega una Pelicula
      description: Este endpoint agrega una nueva pelicula al catalogo y actualiza las tablas
      operationId: postPelicula
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: objeto Pelicula
        required: true
        schema:
          $ref: '#/definitions/Pelicula'
      responses:
        "200":
          description: post exitoso
        "400":
          description: solicitud invalida
  /peliculas//{idtitulo}:
    put:
      tags:
      - administrador
      summary: actualiza peliculas
      description: El endpoint actualiza los datos de la pelicula seleccionada, permitiendole editar los campos existentes, se busca por el id de la pelicula.
      operationId: putPeliculasTitulo
      produces:
      - application/json
      parameters:
      - in: path
        name: idtitulo
        description: id de la pelicula
        required: true
        type: number
      responses:
        "200":
          description: id encontrado
          schema:
            type: array
            items:
              $ref: '#/definitions/PeliculaNom'
        "400":
          description: solicitud invalida, id no encontrado
    
  /peliculas /{idpickups}:
    get:
      tags:
      - administrador
      summary: Recupera los pick ups que se tengan
      description: Le muestra al administrador la cantidad de pick ups que tiene con descripciones especificas de cada una de las peliculas.
      operationId: getPickUps
      produces:
      - application/json
      parameters:
      - in: path
        name: idpickups
        description: id pick up
        required: true
        type: string
      responses:
        "200":
          description: tiene pick ups
          schema:
            type: array
            items:
              $ref: '#/definitions/FormPick'
        "400":
          description: solicitud invalida, no se encontraron pick ups
  /peliculas/all:
    get:
      tags:
      - catalogo
      summary: Recupera peliculas
      description: El endpoint recupera todas las peliculas para mostrarla en el inicio de la pagina.
      operationId: getPeliculas
      produces:
      - application/json
      responses:
        "200":
          description: get exitoso
          schema:
            type: array
            items:
              $ref: '#/definitions/Pelicula'
        "400":
          description: solicitud invalida
  /peliculas/  {nombre}:
    get:
      tags:
      - catalogo
      summary: Recupera peliculas
      description: El endpoint recupera todos las peliculas dependiendo del nombre de una pelicula en especifico.
      operationId: getPeliculasNombre
      produces:
      - application/json
      parameters:
      - in: path
        name: nombre
        description: nombre de la pelicula
        required: true
        type: string
      responses:
        "200":
          description: nombre encontrado
          schema:
            type: array
            items:
              $ref: '#/definitions/PeliculaNom'
        "400":
          description: solicitud invalida, nombre no encontrado
          
  /peliculas/ {actor}:
    get:
      tags:
      - catalogo
      summary: Recupera peliculas
      description: El endpoint recupera todos las peliculas por dependiendo de un actor en especifico.
      operationId: getPeliculasActor
      produces:
      - application/json
      parameters:
      - in: path
        name: actor
        description: Actor de la pelicula
        required: true
        type: string
      responses:
        "200":
          description: actor encontrado
          schema:
            type: array
            items:
              $ref: '#/definitions/PeliculaAct'
        "400":
          description: solicitud invalida, actor no encontrado
          
  /peliculas/{categoria}:
    get:
      tags:
      - catalogo
      summary: Recupera peliculas
      description: El endpoint recupera todos las peliculas por dependiendo de una categoria en especifico.
      operationId: getPeliculasCategoria
      produces:
      - application/json
      parameters:
      - in: path
        name: categoria
        description: Categoria de la pelicula
        required: true
        type: string
      responses:
        "200":
          description: categoria encontrada
          schema:
            type: array
            items:
              $ref: '#/definitions/PeliculaCate'
        "400":
          description: solicitud invalida, categoria no encontrada
  /  peliculas/{idTitulo}:
    delete:
      tags:
      - administrador
      summary: borra peliculas
      description: Borrar la cuenta
      parameters: 
        - in: path
          name: idTitulo
          required: true
          description: Codigo del empleado
          type: string
      responses:
        "200":
          description: "Borrado exitodo"
        "400":
          description: "ID invalido"
        "404":
          description: "No se encontro la pelicula"
      
  /clientes/1/newcli:
    post:
      tags:
      - clientes
      summary: Agrega un cliente
      description: El endpoint busca todos los clientes. Tambien puede buscar a un cliente con su id. Para esto se debe mandar el id del cliente deseado como parametro de query
      operationId: postCliente
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: objeto Cliente
        required: true
        schema:
          $ref: '#/definitions/Clientes1'
      responses:
        "200":
          description: post exitoso
          schema:
            type: array
            items:
              $ref: '#/definitions/Clientes1'
        "400":
          description: solicitud invalida
  /clientes/{auth}:
    get:
      tags:
      - clientes
      summary: Verifica un cliente
      description: Este endpoint abilita a un cliente autentifica al cliente para que empiece a realizar operaciones.
      operationId: getAuthCli
      produces:
      - application/json
      parameters:
      - in: path
        name: auth
        description: id de cliente
        required: true
        type: string
      responses:
        "200":
          description: Cliente autentificado
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientesAuth'
        "401":
          description: solicitud invalida, cliente no autentificado

  
  /cliente/1/reserva:
    post:
      tags:
      - clientes
      summary: Agrega una reserva
      description: El endpoint ayuda a que el cliente seleccione y pueda reservar el titulo que desea
      operationId: postReserva
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: objeto reserva
        required: true
        schema:
          $ref: '#/definitions/Reserva'
      responses:
        "200":
          description: post exitoso
          schema:
            type: array
            items:
              $ref: '#/definitions/Reserva'
        "400":
          description: solicitud invalida
          
          
          
definitions:
  Pelicula:
    type: object
    required:
    - Actor
    - Descripcion
    - Disponibilidad
    - Precio
    - Categoria
    - idPelicula
    - nombrePelicula
    properties:
      idPelicula:
        type: number
        example: 1
      nombrePelicula:
        type: string
        example: Star Wars
      Actor:
        type: string
        example: Mark Hammil
      Categoria:
        type: string
        example: Ficcion
      Descripcion:
        type: string
        example: En una galaxia muy muy lejana...
      Precio:
        type: number
        example: 20.0
      Disponibilidad:
        type: number
        example: 200.0
      image:
        type: string
        example: "https://starwars.jpg"
  Reserva:
    type: object
    required:
    - NumReservas
    - Precio
    - idPelicula
    - metodoTarjeta
    - efectivo
    properties:
      idPelicula:
        type: number
        example: 1
      NumReservas:
        type: number
        example: 2
      Precio:
        type: number
        example: 15
      metodoTarjeta:
        type: number
        example: 21312874891
      efectivo:
        type: string
        example: "null"
  putPelicula:
    type: object
    required:
    - _id
    properties:
      _id:
        type: string
        example: "1"
      nombrePelicula:
        type: string
        example: Star Wars
      Actor:
        type: string
        example: Mark Hammil
      Premios:
        type: number
        example: 2.0
      Descripcion:
        type: string
        example: En una galaxia muy muy lejana...
      Precio:
        type: number
        example: 20.0
      Disponibilidad:
        type: number
        example: 200.0
  Administrador:
    type: object
    required:
    - apellido1
    - apellido2
    - ci
    - nombre1
    - password
    properties:
      nombre1:
        type: string
        example: Mauricio
      apellido1:
        type: string
        example: Illanes
      apellido2:
        type: string
        example: Chipana
      password:
        type: string
      ci:
        type: string
        example: "6105591"
  Clientes1:
    type: object
    properties:
      name:
        type: string
        description: Primer nombre
        example: "Mauricio"
      lastName:
        type: integer
        description: Apellido del cliente
        example: "Illanes"
      userName:
        type: string
        description: username del cliente
        example: "mauro8500"
      password:
        type: string
        description: Contrasenia del cliente
        example: "********"
      passwordRepeat:
        type: string
        description: repetir contrase√±a
        example: "********"
  ClientesAuth:
    type: object
    properties:
      idCli:
        type: number
        description: Primer nombre
        example: 1
      
      
  PeliculaCate:
    type: object
    required:
    - idPelicula
    - Categoria
    - Descripcion
    - Disponibilidad
    - Precio
    properties:
      idPelicula:
        type: number
        example: 1
      Categoria:
        type: string
        example: Ficcion
      Descripcion:
        type: string
        example: En una galaxia muy muy lejana...
      Disponibilidad:
        type: number
        example: 200.0
      Precio:
        type: number
        example: 20.0
      image:
        type: string
        example: "https://starwars.jpg"
  PeliculaNom:
    type: object
    required:
    - idPelicula
    - Nombre
    - Descripcion
    - Disponibilidad
    - Precio
    properties:
      idPelicula:
        type: number
        example: 1
      Nombre:
        type: string
        example: Star Wars
      Descripcion:
        type: string
        example: En una galaxia muy muy lejana...
      Disponibilidad:
        type: number
        example: 200.0
      Precio:
        type: number
        example: 20.0
      image:
        type: string
        example: "https://starwars.jpg"
  PeliculaAct:
    type: object
    required:
    - idPelicula
    - Actor
    - Descripcion
    - Disponibilidad
    - Precio
    properties:
      idPelicula:
        type: number
        example: 1
      Actor:
        type: string
        example: Mark Hammil
      Descripcion:
        type: string
        example: En una galaxia muy muy lejana...
      Disponibilidad:
        type: number
        example: 200.0
      Precio:
        type: number
        example: 20.0
      image:
        type: string
        example: "https://starwars.jpg"
  FormPick:
    type: object
    required:
    - idPelicula
    - Nombre
    - Descripcion
    - Cantidad
    - Hora
    - Fecha
    properties:
      idPelicula:
        type: number
        example: 1
      Nombre:
        type: string
        example: Star Wars
      Descripcion:
        type: string
        example: Tienes entregas esta semana
      Cantidad:
        type: number
        example: 2.0
      Hora:
        type: string
        example: 14-00-00
      fecha:
        type: string
        example: 2022/05/10